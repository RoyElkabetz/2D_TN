import numpy as np
import matplotlib.pyplot as plt


# AFH s = 1/2 chain

D_max = np.array([2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60])
t_list = [0.1, 0.01, 0.001, 0.0001, 0.00001]
iterations = 1000
d = 2
p = 2
J = -1
imat = np.array([[1, 1],
                 [1, 1]])
smat = np.array([[2, 1],
                 [2, 1]])
#Hamiltonian = -J * np.real(np.kron(sx, sx) + np.kron(sy, sy) + np.kron(sz, sz))
gs_energy_per_site = [-0.4279027320644977, -0.4357778474711217, -0.44105237214050586, -0.4420421043243941, -0.44248914059184913, -0.4426419886222407, -0.4427701423171405, -0.44288225027867717, -0.44299788414494534, -0.44308764142433765, -0.44311382973770275, -0.443127051421859, -0.44313210229879896, -0.44313527791307084, -0.4431369088821772, -0.44313799019369265, -0.4431387714497798, -0.4431392604845007, -0.44313960806966257]

D_max_and_convergence_time = np.array([[2., 3., 4., 5., 6., 7., 8., 9., 10., 15., 20., 25., 30., 35., 40., 45., 50., 55., 60.], 
                    [331., 439., 1083., 1204., 1237., 1353., 1261., 827., 1285., 1153., 1733., 939., 1059., 1140.,
                     1836., 1236., 1230., 1300., 1326.]])
plt.figure()
plt.title('Antiferromagnetic Heisenberg S=1/2 chain\n SU iterations=2000 at each dt=[1e-1, 1e-2, 1e-3, 1e-4, 1e-5]')
plt.plot(D_max_and_convergence_time[0, :] ** (-1), gs_energy_per_site, 'o', ls='-')
plt.xlabel('1/D')
plt.ylabel('e')
plt.grid()
plt.show()                     
